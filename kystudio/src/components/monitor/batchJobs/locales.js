export default {
  'en': {
    dataRange: 'Data Range',
    jobId: 'Job ID: ',
    JobType: 'Type',
    JobName: 'Job Name',
    TargetSubject: 'Object',
    ProgressStatus: 'Status',
    startTime: 'Start Time',
    endTime: 'End Time',
    Duration: 'Duration',
    Actions: 'Actions',
    jobResume: 'Resume',
    jobDiscard: 'Discard',
    jobPause: 'Pause',
    jobDrop: 'Delete',
    jobRestart: 'Restart',
    jobDiagnosis: 'Download Job Diagnostic Package',
    tip_jobResume: 'Resume the Job',
    tip_jobPause: 'Pause the Job',
    tip_jobDiscard: 'Discard the Job',
    cubeName: 'Cube Name',
    NEW: 'NEW',
    PENDING: 'PENDING',
    RUNNING: 'RUNNING',
    FINISHED: 'FINISHED',
    ERROR: 'ERROR',
    DISCARDED: 'DISCARDED',
    STOPPED: 'STOPPED',
    LASTONEDAY: 'Last 1 Day',
    LASTONEWEEK: 'Last 1 Week',
    LASTONEMONTH: 'Last 1 Month',
    LASTONEYEAR: 'Last 1 Year',
    ALL: 'ALL',
    parameters: 'Parameters',
    output: 'Log',
    load: 'Loading ... ',
    cmdOutput: 'cmd_output',
    resumeJob: 'Are you sure you want to resume {count} job record(s)?',
    resumeJobTitle: 'Resume Job',
    restartJob: 'Are you sure you want to restart {count} job record(s)?',
    restartJobTitle: 'Restart Job',
    pauseJob: 'Are you sure you want to pause {count} job record(s)?',
    pauseJobTitle: 'Pause Job',
    dropJob: 'Are you sure you want to delete {count} job record(s)?',
    dropJobTitle: 'Delete Job',
    discardJob: 'Are you sure you want to discard the following job(s)? Please note that it couldn\'t be recovered.',
    discardJobWarning: 'Are you sure you want to discard the following job(s)? Discarding the highlighted job(s) might result in gaps between segments. The query results would be empty for those data ranges. Please note that the discarded jobs couldn’t be recovered.',
    discardJobTitle: 'Discard Job',
    discardChJobTip: 'Some of the loaded data can serve the query. Please check the segment to complete the data, which may cause the query performance degradation before completion.',
    jobName: 'Job Name',
    duration: 'Executing',
    totalDuration: 'Total Duration',
    waiting: 'Waiting',
    noSelectJobs: 'Please select at least one job.',
    selectedJobs: '{selectedNumber} jobs have been selected. ',
    selectAll: 'All Select',
    fullLoad: 'Full Load',
    full: 'Full',
    jobDetails: 'Job Details',
    durationDetails: 'Details',
    waitingjobs: 'initializing job(s)',
    jobs: 'Job(s)',
    waitingJobList: 'Initializing job List',
    triggerTime: 'Trigger Time',
    order: 'Order',
    jobTarget: 'Job Target: ',
    jobsList: 'Batch Job',
    sparkJobTip: 'Spark Job',
    logInfoTip: 'Log Output',
    openJobSteps: 'Open Job Steps',
    sequenceId: 'Sequence ID',
    INDEX_REFRESH: 'Refresh Data',
    INDEX_MERGE: 'Merge Data',
    INDEX_BUILD: 'Build Index',
    INC_BUILD: 'Load Data',
    TABLE_SAMPLING: 'Sample Table Data',
    SUB_PARTITION_REFRESH: 'Refresh Sub-partitions Data',
    SUB_PARTITION_BUILD: 'Build Sub-partitions Data',
    SNAPSHOT_BUILD: 'Build Snapshot',
    SNAPSHOT_REFRESH: 'Refresh Snapshot',
    EXPORT_TO_SECOND_STORAGE: 'Load Data to Tiered Storage',
    SECOND_STORAGE_MODEL_CLEAN: 'Delete Tiered Storage (Model)',
    SECOND_STORAGE_NODE_CLEAN: 'Delete Tiered Storage (Project)',
    SECOND_STORAGE_SEGMENT_CLEAN: 'Delete Tiered Storage (Segment)',
    SECOND_STORAGE_INDEX_CLEAN: 'Delete Tiered Storage (Index)',
    SECOND_STORAGE_REFRESH_SECONDARY_INDEXES: 'Refresh skipping index',
    INTERNAL_TABLE_BUILD: 'Load internal table',
    INTERNAL_TABLE_REFRESH: 'Refresh internal table',
    LAYOUT_DATA_OPTIMIZE: 'Storage Optimization',
    clearUpIntermediateTable: 'Garbage CleanUp',
    project: 'Project',
    adminTips: 'Admin user can view all job information via Select All option in the project list.',
    clearAll: 'Clear All',
    filter: 'Filter',
    refreshList: 'Refresh List',
    pleaseSearch: 'Search Object or Job ID',
    diagnosis: 'Diagnosis',
    jobNodes: 'Job Node',
    unknow: 'Unknown',
    snapshotDisableTips: 'Snapshot management is not enabled.',
    snapshotIsDeleted: 'The snapshot is deleted',
    modelIsDeleted: 'The model is deleted',
    detectResource: 'Detect Resource',
    loadDataToIndex: 'Load Data To Index',
    updateMetadata: 'Update Metadata',
    mergeSegmentData: 'Merge Segment Data',
    cleanUpOldSegment: 'Clean Up Old Segment',
    tableSampling: 'Sample Table Data',
    buildSnapshot: 'Build Snapshot',
    increamLoad: 'Incremental Load',
    filteredTotalSize: '{totalSize} result(s)',
    waitingYarnResource: 'Waiting for resources',
    buildOrRefreshSnapshot: 'Build or refresh snapshot',
    materializeFactTableView: 'Materialize fact table view',
    generateGlobalDict: 'Generate global dictionary',
    generateFlatTable: 'Generate flat table',
    saveFlatTable: 'Save flat table',
    getFlatTableStatistics: 'Get flat table statistics',
    generateDictOfCC: 'Generate global dictionary of computed columns',
    mergeFlatTable: 'Merge flat table',
    mergeIndexes: 'Merge indexes',
    mergeFlatTableStatistics: 'Merge flat table statistics',
    sampleTableData: 'Sample Table Data',
    buildIndexesByLayer: 'Build indexes by layer',
    updateFlatTableStatistics: 'Update flat table statistics',
    deleteUselessLayoutData: 'Delete invalid data',
    optimizeLayoutDataByRepartition: 'Index data repartition',
    optimizeLayoutDataByZorder: 'Z-order sorting',
    optimizeLayoutDataByCompaction: 'Modify index file size',
    durationStart: 'Start Time: ',
    durationEnd: 'End Time: ',
    jobParams: 'Job Parameters',
    paramKey: 'Key',
    paramValue: 'Value',
    buildSegmentTips: 'The current step has {segments} segments in parallel, where {successLen} success, {warningLen} segments wasn\'t built due to data inconsistency, {pendingLen} pending, and {runningLen} executing.',
    viewDetails: 'View Details',
    DATA_INCONSISTENT: 'this segment wasn\'t built due to data inconsistency',
    dataInconsistentInfo: 'The count() number in the Hive table corresponding to the segment is different from the existing indexes, or the count() number of the existing indexes is different from each other. It results in some inedx unbuilt in the segments.<br/> If you still want to build this part of the index, please try one of the following methods:<br/>1）Refresh all indexes in the segment based on Hive.<br/>2)  Update the Hive table to resolve the data inconsistency with existing indexes and resubmit the building task.<br/>3) Contact Admin to modify model/project-level parameter.',
    segmentDetail: 'Segment Details',
    errorDetail: 'Error Details',
    resolveErrorBtn: 'View Solution',
    viewMore: 'View More',
    step_finished: 'Finished',
    step_running: 'Running...',
    step_pending: 'Pending...',
    step_error: 'Error',
    step_error_stop: 'Stopped',
    step_discarded: 'Discarded',
    step_stopped: 'Paused',
    step_skip: 'Skipped',
    step_warning: 'A data issue is found',
    errorStepTips: 'Job interrupted, "{name}" step error',
    noErrorMsg: 'No error message',
    chRestartTips: 'Can\'t restart the current job where some data has been loaded.',
    fullOptimization: 'Full Optimization',
    loadInternalTableStep: 'Load Internal Table',
    loadGlutenCacheStep: 'Load Gluten Cache',
    partitions: 'Paritions'
  }
}
